name: Push Workflow

on:
  push:
    branches: ["main"]
  pull_request:

permissions:
  contents: read
  packages: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY_LOGIN_SERVER: ghcr.io
  IMAGE_NAME: mheguy/transcription-bot

jobs:
  test-suite:
    timeout-minutes: 10
    name: Run linters & Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.5.1"
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Ensure lock file is up to date
        run: uv lock --locked

      - name: Install the project
        env: 
          UV_LINK_MODE: copy
        run: uv sync --all-extras --dev

      - name: Ruff lint check
        run: uv run ruff check .

      - name: Ruff format check
        run: uv run ruff format --check .

      - name: Validate structure
        run: uv run lint-imports

      - name: Run pyright
        run: uv run pyright

      - name: Run pytest
        run: uv run pytest
  build-docker-image:
    name: Build and Push docker image
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1

      - name: Log into registry
        uses: docker/login-action@v3.4.0
        with:
          registry: ${{ env.REGISTRY_LOGIN_SERVER }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.7.0
        with:
          images: ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=pr
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
